{
  "name": "optimist",
  "version": "0.2.3",
  "description": "Light-weight option parsing with an argv hash. No optstrings attached.",
  "main": "./index.js",
  "directories": {
    "lib": ".",
    "test": "test",
    "example": "examples"
  },
  "dependencies": {
    "wordwrap": ">=0.0.1 <0.1"
  },
  "devDependencies": {
    "expresso": "=0.7.x"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-optimist.git"
  },
  "keywords": [
    "argument",
    "args",
    "option",
    "parser",
    "parsing",
    "cli",
    "command"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": {
    "node": ">=0.4"
  },
  "readme": "optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn't have to suck (as much).\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist').argv;\n\n    if (argv.rif - 5 * argv.xup > 7.138) {\n        console.log('Buy more riffiwobbles');\n    }\n    else {\n        console.log('Sell the xupptumblers');\n    }\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\nBut wait! There's more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist').argv;\n    console.log('(%d,%d)', argv.x, argv.y);\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n    #!/usr/bin/env node\n    var sys = require('sys');\n    var argv = require('optimist').argv;\n\n    if (argv.s) {\n        sys.print(argv.fr ? 'Le chat dit: ' : 'The cat says: ');\n    }\n    console.log(\n        (argv.fr ? 'miaou' : 'meow') + (argv.p ? '.' : '')\n    );\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist').argv;\n    console.log('(%d,%d)', argv.x, argv.y);\n    console.log(argv._);\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ 'moo' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ 'foo', 'bar', 'baz' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .usage('Usage: $0 -x [num] -y [num]')\n        .demand(['x','y'])\n        .argv;\n    \n    console.log(argv.x / argv.y);\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ ./divide.js -x 4.91 -z 2.51\n    Usage: node ./examples/divide.js -x [num] -y [num]\n\n      -x  [required]\n\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .default('x', 10)\n        .default('y', 10)\n        .argv\n    ;\n    console.log(argv.x + argv.y);\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .default({ x : 10, y : 10 })\n        .argv\n    ;\n    console.log(argv.x + argv.y);\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .boolean('v')\n        .argv\n    ;\n    console.dir(argv);\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ 'bar', 'baz', 'foo' ]\n\nboolean_double.js\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .boolean(['x','y','z'])\n        .argv\n    ;\n    console.dir([ argv.x, argv.y, argv.z ]);\n    console.dir(argv._);\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ 'one', 'two', 'three' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n    #!/usr/bin/env node\n    var argv = require('optimist')\n        .usage('Count the lines in a file.\\nUsage: $0')\n        .demand('f')\n        .alias('f', 'file')\n        .describe('f', 'Load a file')\n        .argv\n    ;\n\n    var fs = require('fs');\n    var s = fs.createReadStream(argv.file);\n\n    var lines = 0;\n    s.on('data', function (buf) {\n        lines += buf.toString().match(/\\n/g).length;\n    });\n\n    s.on('end', function () {\n        console.log(lines);\n    });\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nnotes\n=====\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl's\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n",
  "readmeFilename": "README.markdown",
  "_id": "optimist@0.2.3",
  "dist": {
    "shasum": "2afc74f43364f1236fe905434830042fc815cbfb"
  },
  "_from": "optimist@0.2.3",
  "_resolved": "https://registry.npmjs.org/optimist/-/optimist-0.2.3.tgz"
}
